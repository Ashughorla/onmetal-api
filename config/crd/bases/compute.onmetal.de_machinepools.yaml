
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: machinepools.compute.onmetal.de
spec:
  group: compute.onmetal.de
  names:
    kind: MachinePool
    listKind: MachinePoolList
    plural: machinepools
    singular: machinepool
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.state
      name: StateFields
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: MachinePool is the Schema for the machinepools API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MachinePoolSpec defines the desired state of MachinePool
            properties:
              capacity:
                description: Capacity defines the quantity of this machine pool per
                  availability zone
                items:
                  description: AvailabilityZoneQuantity defines the quantity of available
                    MachineClasses in a given AZ
                  properties:
                    availabilityZone:
                      description: AvailabilityZone is the name of the availability
                        zone
                      type: string
                    classes:
                      description: Classes defines a list of machine classes and their
                        corresponding quantities
                      items:
                        description: MachineClassQuantity defines the quantity of
                          a given MachineClass
                        properties:
                          name:
                            description: Name is the name of the machine class quantity
                            type: string
                          quantity:
                            description: Quantity is an absolut number of the available
                              machine class
                            minimum: 0
                            type: integer
                        required:
                        - name
                        - quantity
                        type: object
                      type: array
                  required:
                  - availabilityZone
                  - classes
                  type: object
                type: array
              privacy:
                description: Privacy indicates the privacy scope of the machine pool
                type: string
              region:
                description: Region defines the region where this machine pool is
                  available
                type: string
            required:
            - capacity
            - privacy
            type: object
          status:
            description: MachinePoolStatus defines the observed state of MachinePool
            properties:
              conditions:
                description: Conditions represents the status for individual operators
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{     // Represents the observations of a
                    foo's current state.     // Known .status.conditions.type are:
                    \"Available\", \"Progressing\", and \"Degraded\"     // +patchMergeKey=type
                    \    // +patchStrategy=merge     // +listType=map     // +listMapKey=type
                    \    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                    \n     // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              message:
                description: Message contains a message for the corresponding state
                type: string
              state:
                description: State indicates the state of a resource
                type: string
              used:
                description: AvailabilityZoneQuantity defines the quantity of available
                  MachineClasses in a given AZ
                properties:
                  availabilityZone:
                    description: AvailabilityZone is the name of the availability
                      zone
                    type: string
                  classes:
                    description: Classes defines a list of machine classes and their
                      corresponding quantities
                    items:
                      description: MachineClassQuantity defines the quantity of a
                        given MachineClass
                      properties:
                        name:
                          description: Name is the name of the machine class quantity
                          type: string
                        quantity:
                          description: Quantity is an absolut number of the available
                            machine class
                          minimum: 0
                          type: integer
                      required:
                      - name
                      - quantity
                      type: object
                    type: array
                required:
                - availabilityZone
                - classes
                type: object
            required:
            - used
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
