
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.2
  creationTimestamp: null
  name: machines.compute.onmetal.de
spec:
  group: compute.onmetal.de
  names:
    kind: Machine
    listKind: MachineList
    plural: machines
    singular: machine
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.hostname
      name: Hostname
      type: string
    - jsonPath: .spec.machineClass.name
      name: MachineClass
      type: string
    - jsonPath: .spec.image
      name: Image
      type: string
    - jsonPath: .spec.machinePool.name
      name: MachinePool
      type: string
    - jsonPath: .status.state
      name: State
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Machine is the Schema for the machines API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MachineSpec defines the desired state of Machine
            properties:
              efiVars:
                description: EFIVars are variables to pass to EFI while booting up.
                items:
                  description: EFIVar is a variable to pass to EFI while booting up.
                  properties:
                    name:
                      type: string
                    uuid:
                      type: string
                    value:
                      type: string
                  required:
                  - value
                  type: object
                type: array
              hostname:
                description: Hostname is the hostname of the machine
                type: string
              ignition:
                description: Ignition is a reference to a config map containing the
                  ignition YAML for the machine to boot up. If key is empty, DefaultIgnitionKey
                  will be used as fallback.
                properties:
                  key:
                    description: The key of the entry in the ConfigMap resource's
                      `data` field to be used. Some instances of this field may be
                      defaulted, in others it may be required.
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              image:
                description: Image is the URL providing the operating system image
                  of the machine.
                type: string
              interfaces:
                description: Interfaces define a list of network interfaces present
                  on the machine
                items:
                  description: Interface is the definition of a single interface
                  properties:
                    ip:
                      description: IP specifies a concrete IP address which should
                        be allocated from a Subnet
                      type: string
                    name:
                      description: Name is the name of the interface
                      type: string
                    priority:
                      description: Priority is the priority level of this interface
                      format: int32
                      type: integer
                    target:
                      description: Target is the referenced resource of this interface.
                      properties:
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            TODO: Add other useful fields. apiVersion, kind, uid?'
                          type: string
                      type: object
                  required:
                  - name
                  - target
                  type: object
                type: array
              machineClass:
                description: MachineClass is a reference to the machine class/flavor
                  of the machine.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              machinePool:
                description: MachinePool defines machine pool to run the machine in.
                  If empty, a scheduler will figure out an appropriate pool to run
                  the machine in.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              machinePoolSelector:
                additionalProperties:
                  type: string
                description: MachinePoolSelector selects a suitable MachinePool by
                  the given labels.
                type: object
              securityGroups:
                description: SecurityGroups is a list of security groups of a machine
                items:
                  description: LocalObjectReference contains enough information to
                    let you locate the referenced object inside the same namespace.
                  properties:
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                  type: object
                type: array
              sshPublicKeys:
                description: SSHPublicKeys is a list of SSH public key secret references
                  of a machine.
                items:
                  description: SecretKeySelector is a reference to a specific 'key'
                    within a Secret resource. In some instances, `key` is a required
                    field.
                  properties:
                    key:
                      description: The key of the entry in the Secret resource's `data`
                        field to be used. Some instances of this field may be defaulted,
                        in others it may be required.
                      type: string
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                  type: object
                type: array
              volumeClaims:
                description: VolumeClaims are volumes claimed by this machine.
                items:
                  description: VolumeClaim defines a volume claim of a machine
                  properties:
                    name:
                      description: Name is the name of the VolumeClaim
                      type: string
                    priority:
                      description: Priority is the OS priority of the volume.
                      format: int32
                      type: integer
                    retainPolicy:
                      description: RetainPolicy defines what should happen when the
                        machine is being deleted
                      type: string
                    size:
                      anyOf:
                      - type: integer
                      - type: string
                      description: Size defines the size of the volume
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    storageClass:
                      description: StorageClass describes the storage class of the
                        volumes
                      properties:
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            TODO: Add other useful fields. apiVersion, kind, uid?'
                          type: string
                      type: object
                    volume:
                      description: Volume is a reference to an existing volume
                      properties:
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            TODO: Add other useful fields. apiVersion, kind, uid?'
                          type: string
                      type: object
                  required:
                  - name
                  - retainPolicy
                  - storageClass
                  type: object
                type: array
            required:
            - hostname
            - image
            - machineClass
            type: object
          status:
            description: MachineStatus defines the observed state of Machine
            properties:
              conditions:
                items:
                  description: MachineCondition is one of the conditions of a volume.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time the status
                        of a condition has transitioned from one state to another.
                      format: date-time
                      type: string
                    lastUpdateTime:
                      description: LastUpdateTime is the last time a condition has
                        been updated.
                      format: date-time
                      type: string
                    message:
                      description: Message is a human-readable explanation of why
                        the condition has a certain reason / state.
                      type: string
                    observedGeneration:
                      description: ObservedGeneration represents the .metadata.generation
                        that the condition was set based upon.
                      format: int64
                      type: integer
                    reason:
                      description: Reason is a machine-readable indication of why
                        the condition is in a certain state.
                      type: string
                    status:
                      description: Status is the status of the condition.
                      type: string
                    type:
                      description: Type is the type of the condition.
                      type: string
                  required:
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              interfaces:
                items:
                  description: InterfaceStatus reports the status of an Interface.
                  properties:
                    ip:
                      description: IP is the IP allocated for an interface.
                      type: string
                    name:
                      description: Name is the name of an interface.
                      type: string
                    priority:
                      description: Priority is the OS priority of the interface.
                      format: int32
                      type: integer
                  required:
                  - ip
                  - name
                  type: object
                type: array
              state:
                type: string
              volumeClaims:
                items:
                  description: VolumeClaimStatus is the status of a VolumeClaim.
                  properties:
                    name:
                      description: Name is the name of a volume claim.
                      type: string
                    priority:
                      description: Priority is the OS priority of the volume.
                      format: int32
                      type: integer
                  required:
                  - name
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
